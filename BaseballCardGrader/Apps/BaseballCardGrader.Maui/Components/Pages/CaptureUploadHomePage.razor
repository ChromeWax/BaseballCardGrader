@page "/CaptureAndUpload"
@inject NavigationManager NavigationManager;

<div class="image-upload-container">
    <div class="header-section">
        <h1>Choose Image Source</h1>
        <p>Select an option below to get started</p>
    </div>

    <div class="options-container">
        <button class="option-button upload-btn ripple" id="uploadBtn" type="button" @onclick="NavigateToUpload">
            <span class="option-icon">📁</span>
            <div class="option-title">Upload from Gallery</div>
            <div class="option-description">Select photos from your device gallery</div>
        </button>

        <button class="option-button capture-btn ripple" id="captureBtn" type="button" @onclick="NavigateToCapture">
            <span class="option-icon">📷</span>
            <div class="option-title">Take Photo</div>
            <div class="option-description">Capture new photos using your camera</div>
        </button>
    </div>

    <div class="preview-section" id="previewSection">
        <div class="status-message" id="statusMessage"></div>
        <img class="preview-image" id="previewImage" alt="Selected image preview"/>
        <button class="process-btn" id="processBtn" type="button">Process Image</button>
    </div>
</div>

<style>
    .image-upload-container {
        max-width: 400px;
        margin: 0 auto;
        padding: 40px 20px;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }

    .header-section {
        text-align: center;
        margin-bottom: 40px;
    }

    .header-section h1 {
        color: white;
        font-size: 28px;
        font-weight: 300;
        margin-bottom: 8px;
    }

    .header-section p {
        color: rgba(255, 255, 255, 0.8);
        font-size: 16px;
    }

    .options-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-bottom: 30px;
    }

    .option-button {
        background: white;
        border: none;
        border-radius: 20px;
        padding: 30px 25px;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
        text-align: center;
        min-height: 140px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .option-button:hover {
        transform: translateY(-4px);
        box-shadow: 0 16px 48px rgba(0, 0, 0, 0.15);
    }

    .option-button:active {
        transform: translateY(-2px) scale(0.98);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12);
    }

    .option-icon {
        font-size: 48px;
        margin-bottom: 15px;
        display: block;
    }

    .upload-btn {
        background: linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%);
        border-left: 4px solid #ff6b6b;
    }

    .upload-btn .option-icon {
        background: linear-gradient(45deg, #ff6b6b, #ff8e8e);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .capture-btn {
        background: linear-gradient(135deg, #f0fdfa 0%, #c6f6d5 100%);
        border-left: 4px solid #4ecdc4;
    }

    .capture-btn .option-icon {
        background: linear-gradient(45deg, #4ecdc4, #44a08d);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .option-title {
        font-size: 20px;
        font-weight: 600;
        margin-bottom: 8px;
        color: #2d3748;
    }

    .option-description {
        font-size: 14px;
        color: #718096;
        line-height: 1.4;
    }

    .preview-section {
        background: white;
        border-radius: 20px;
        padding: 25px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        text-align: center;
        display: none;
        animation: fadeInUp 0.4s ease-out;
    }

    .preview-section.show {
        display: block;
    }

    .preview-image {
        max-width: 100%;
        max-height: 200px;
        border-radius: 12px;
        margin: 15px 0;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .process-btn {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 50px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-top: 15px;
    }

    .process-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
    }

    .status-message {
        color: #48bb78;
        font-weight: 500;
        margin-bottom: 15px;
        padding: 10px;
        background: rgba(72, 187, 120, 0.1);
        border-radius: 8px;
        display: none;
    }

    .status-message.show {
        display: block;
    }

    .ripple {
        position: relative;
        overflow: hidden;
    }

    /* Mobile responsive - using CSS within style tags */
    @@media (max-width: 480px) {
        .image-upload-container {
            padding: 20px 15px;
        }

        .option-button {
            padding: 25px 20px;
            min-height: 120px;
        }

        .option-icon {
            font-size: 40px !important;
            margin-bottom: 12px;
        }

        .option-title {
            font-size: 18px;
        }

        .option-description {
            font-size: 13px;
        }
    }

    /* Animation keyframes */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes spin {
        0% {
            transform: translate(-50%, -50%) rotate(0deg);
        }
        100% {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }
</style>

@code {

    private void NavigateToCapture()
    {
        NavigationManager.NavigateTo("/Capture");
    }

    private void NavigateToUpload()
    {
        NavigationManager.NavigateTo("/Upload");
    }

}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Upload button click handler
        document.getElementById('uploadBtn').addEventListener('click', function () {
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = '';
            }, 150);

            // Your upload logic goes here
            console.log('Upload button clicked');
            // Example: window.location.href = '/Upload';
        });

        // Capture button click handler
        document.getElementById('captureBtn').addEventListener('click', function () {
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = '';
            }, 150);

            // Your capture logic goes here
            console.log('Capture button clicked');
            // Example: window.location.href = '/Capture';
        });

        // Process button click handler
        document.getElementById('processBtn').addEventListener('click', function () {
            // Your process logic goes here
            console.log('Process button clicked');
        });
    });

    // Helper function to show preview (call this from your backend)
    function showPreview(imageSrc, message) {
        document.getElementById('statusMessage').textContent = message;
        document.getElementById('statusMessage').classList.add('show');
        document.getElementById('previewImage').src = imageSrc;
        document.getElementById('previewSection').classList.add('show');
    }
</script>
